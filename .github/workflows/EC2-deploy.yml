name: Deploy EC2 Instance

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy-ec2:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Save SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Add SSH key to the agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

    - name: Create EC2 Instance
      id: ec2
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0fb6ffc8e310f461b \
            --count 1 \
            --instance-type t2.micro \
            --key-name TestDevOps \
            --security-group-ids sg-0e8bb9959030cb190 \
            --subnet-id subnet-00d0912f52be90b9c \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=GeoInstanciaGratuita}]" \
            --associate-public-ip-address \
            --query "Instances[0].InstanceId" \
            --output text)

        echo "EC2 Instance created with ID: $INSTANCE_ID"

        PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)

        echo "Public IP of EC2 instance: $PUBLIC_IP"
        echo "::set-output name=instance_id::$INSTANCE_ID"
        echo "::set-output name=public_ip::$PUBLIC_IP"

    - name: Ssh connection
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.USER_SERVER }}@${{ steps.ec2.outputs.public_ip }}

    - name: Clean up
      run: |
          rm ~/.ssh/id_rsa
          echo "Cleaned up SSH private key."
